name: Build

on:
  push:
    branches:
      - main
    paths:
      - "Native/**"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test
        working-directory: ./Native
        run: |
          cargo test

  linux-x64:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        working-directory: ./Native
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build --release --target x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: ./Native/target/x86_64-unknown-linux-gnu/release/lib*.so
          retention-days: 1
  
  linux-arm64:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Build
        working-directory: ./Native
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: |
          rustup target add aarch64-unknown-linux-gnu
          cargo build --release --target aarch64-unknown-linux-gnu

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: ./Native/target/aarch64-unknown-linux-gnu/release/lib*.so
          retention-days: 1
  
  osx-x64:
    runs-on: macos-13
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        working-directory: ./Native
        run: |
          rustup target add x86_64-apple-darwin
          cargo build --release --target x86_64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: ./Native/target/x86_64-apple-darwin/release/lib*.dylib
          retention-days: 1
  
  osx-arm64:
    runs-on: macos-13
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        working-directory: ./Native
        run: |
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: ./Native/target/aarch64-apple-darwin/release/lib*.dylib
          retention-days: 1

  win-x64:
    runs-on: windows-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        working-directory: ./Native
        run: |
          rustup target add x86_64-pc-windows-msvc
          cargo build --release --target x86_64-pc-windows-msvc

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: ./Native/target/x86_64-pc-windows-msvc/release/*.dll
          retention-days: 1

  win-arm64:
    runs-on: windows-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        working-directory: ./Native
        run: |
          rustup target add aarch64-pc-windows-msvc
          cargo build --release --target aarch64-pc-windows-msvc

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: ./Native/target/aarch64-pc-windows-msvc/release/*.dll
          retention-days: 1

  publish-github-release:
    runs-on: ubuntu-latest
    needs: [ linux-x64, linux-arm64, osx-x64, osx-arm64, win-x64, win-arm64 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: target
      - name: Create Github Release
        run: |
          TAG="$(date -u +"v%Y.%m.%d.%H%M").${GITHUB_SHA::4}"
          echo "Tag: ${TAG}"
          gh release create $TAG --draft --notes "Automatically built binaries"
          cd target
          for DIR_NAME in * ; do
              cd $DIR_NAME
              for FILE in * ; do
                  NEW_FILE_NAME="${DIR_NAME}_${FILE}"
                  echo "Renaming $FILE to $NEW_FILE_NAME"
                  mv $FILE $NEW_FILE_NAME
                  echo "Uploading $NEW_FILE_NAME"
                  gh release upload $TAG $NEW_FILE_NAME
              done
              cd ..
          done
          gh release edit $TAG --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}