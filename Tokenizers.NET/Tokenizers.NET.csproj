<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Title>Tokenizers.NET</Title>
        <Authors>TrumpMcDonaldz</Authors>
        <Description>High-performance .NET wrapper of the Rust Tokenizers library</Description>
        <PackageProjectUrl>https://github.com/budgetdevv/Tokenizers.NET</PackageProjectUrl>
        <RepositoryUrl>https://github.com/budgetdevv/Tokenizers.NET</RepositoryUrl>
    </PropertyGroup>

    <PropertyGroup>
        <PackageReadmeFile>README.md</PackageReadmeFile>
    </PropertyGroup>

    <ItemGroup>
        <None Include="../README.md" Pack="true" PackagePath="/"/>
    </ItemGroup>
    
    <PropertyGroup>
        <RustProjectPath>$(MSBuildProjectDirectory)/../Native</RustProjectPath>

        <!-- Directory where Cargo will output the built libraries -->
        <CargoTargetDirectory>$(RustProjectPath)/target</CargoTargetDirectory>

        <RustTargetOSXArm64>aarch64-apple-darwin</RustTargetOSXArm64>
        <RustTargetOSXX64>x86_64-apple-darwin</RustTargetOSXX64>
        
        <RustTargetWindowsX64>x86_64-pc-windows-gnu</RustTargetWindowsX64>
        
        <RustTargetLinuxX64>x86_64-unknown-linux-gnu</RustTargetLinuxX64>
        <RustTargetLinuxArm64>aarch64-unknown-linux-gnu</RustTargetLinuxArm64>

        <NativeLibName_win>tokenizers_net.dll</NativeLibName_win>
        <NativeLibName_osx>libtokenizers_net.dylib</NativeLibName_osx>
        <NativeLibName_linux>libtokenizers_net.so</NativeLibName_linux>
    </PropertyGroup>

    <!-- Pre-build step: Build the Rust project -->
    <Target Name="BuildNative" BeforeTargets="Build" Condition="False">
        <Exec Command="cargo build --release --target $(RustTargetOSXArm64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />

        <Exec Command="cargo build --release --target $(RustTargetOSXX64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />
        
        <Exec Command="cross build --release --target $(RustTargetWindowsX64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />

        <Exec Command="cross build --release --target $(RustTargetLinuxX64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />

        <Exec Command="cross build --release --target $(RustTargetLinuxArm64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />
    </Target>

    <!-- Include native libraries in the NuGet package for different platforms -->
    <ItemGroup>
        <!-- Windows x64 -->
        <None Include="$(CargoTargetDirectory)/$(RustTargetWindowsX64)/release/tokenizers_net.dll"
              Pack="true"
              PackagePath="runtimes/win-x64/native/tokenizers_net.dll"
        />

        <!-- macOS ARM64 -->
        <None Include="$(CargoTargetDirectory)/$(RustTargetOSXArm64)/release/libtokenizers_net.dylib"
              Pack="true"
              PackagePath="runtimes/osx-arm64/native/libtokenizers_net.dylib"
        />

        <!-- macOS x64 -->
        <None Include="$(CargoTargetDirectory)/$(RustTargetOSXX64)/release/libtokenizers_net.dylib"
              Pack="true"
              PackagePath="runtimes/osx-x64/native/libtokenizers_net.dylib"
        />

        <!-- Linux x64 -->
        <None Include="$(CargoTargetDirectory)/$(RustTargetLinuxX64)/release/libtokenizers_net.so"
              Pack="true"
              PackagePath="runtimes/linux-x64/native/libtokenizers_net.so"
        />

        <!-- Linux ARM64 -->
        <None Include="$(CargoTargetDirectory)/$(RustTargetLinuxArm64)/release/libtokenizers_net.so"
              Pack="true"
              PackagePath="runtimes/linux-arm64/native/libtokenizers_net.so"
        />
    </ItemGroup>
    
    <!--  https://youtrack.jetbrains.com/issue/RIDER-26906 -->
    <Target Name="ExcludeAnnoyingDylib" AfterTargets="ResolveAssemblyReferences">
        <ItemGroup>
            <None Update="@(None)">
                <Visible>false</Visible>
            </None>
        </ItemGroup>
    </Target>
    
</Project>