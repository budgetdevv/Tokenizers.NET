<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>

    <PropertyGroup>
        <RustProjectPath>$(MSBuildProjectDirectory)/../Native</RustProjectPath>

        <!-- Directory where Cargo will output the built libraries -->
        <CargoTargetDirectory>$(RustProjectPath)/target</CargoTargetDirectory>

        <RustTargetOSXArm64>aarch64-apple-darwin</RustTargetOSXArm64>
        <RustTargetOSXX64>x86_64-apple-darwin</RustTargetOSXX64>
        
        <RustTargetWindowsX64>x86_64-pc-windows-gnu</RustTargetWindowsX64>
        
        <RustTargetLinuxX64>x86_64-unknown-linux-gnu</RustTargetLinuxX64>
        <RustTargetLinuxArm64>aarch64-unknown-linux-gnu</RustTargetLinuxArm64>
    </PropertyGroup>

    <!-- Pre-build step: Build the Rust project -->
    <Target Name="BuildNative" BeforeTargets="Build" Condition="False">
        <Exec Command="cargo build --release --target $(RustTargetOSXArm64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />

        <Exec Command="cargo build --release --target $(RustTargetOSXX64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />
        
        <Exec Command="cross build --release --target $(RustTargetWindowsX64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />

        <Exec Command="cross build --release --target $(RustTargetLinuxX64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />

        <Exec Command="cross build --release --target $(RustTargetLinuxArm64)"
              WorkingDirectory="$(RustProjectPath)"
              ContinueOnError="true"
        />
    </Target>

    <Target Name="CopyNative" AfterTargets="Build">
        <PropertyGroup>
            <NativeLibName_win>tokenizers_net.dll</NativeLibName_win>
            <NativeLibName_osx>libtokenizers_net.dylib</NativeLibName_osx>
            <NativeLibName_linux>libtokenizers_net.so</NativeLibName_linux>

            <NativeLibraryDestination>$(OutputPath)/runtimes</NativeLibraryDestination>

            <NativeLibraryPath_osx_arm64>$(CargoTargetDirectory)/$(RustTargetOSXArm64)/release/$(NativeLibName_osx)</NativeLibraryPath_osx_arm64>
            <NativeLibraryDestination_osx_arm64>$(NativeLibraryDestination)/osx-arm64/native/$(NativeLibName_osx)</NativeLibraryDestination_osx_arm64>
            
            <NativeLibraryPath_osx_x64>$(CargoTargetDirectory)/$(RustTargetOSXX64)/release/$(NativeLibName_osx)</NativeLibraryPath_osx_x64>
            <NativeLibraryDestination_osx_x64>$(NativeLibraryDestination)/osx-x64/native/$(NativeLibName_osx)</NativeLibraryDestination_osx_x64>

            <NativeLibraryPath_win_x64>$(CargoTargetDirectory)/$(RustTargetWindowsX64)/release/$(NativeLibName_win)</NativeLibraryPath_win_x64>
            <NativeLibraryDestination_win_x64>$(NativeLibraryDestination)/win-x64/native/$(NativeLibName_win)</NativeLibraryDestination_win_x64>
            
            <NativeLibraryPath_linux_x64>$(CargoTargetDirectory)/$(RustTargetLinuxX64)/release/$(NativeLibName_linux)</NativeLibraryPath_linux_x64>
            <NativeLibraryDestination_linux_x64>$(NativeLibraryDestination)/linux-x64/native/$(NativeLibName_linux)</NativeLibraryDestination_linux_x64>
            
            <NativeLibraryPath_linux_arm64>$(CargoTargetDirectory)/$(RustTargetLinuxArm64)/release/$(NativeLibName_linux)</NativeLibraryPath_linux_arm64>
            <NativeLibraryDestination_linux_arm64>$(NativeLibraryDestination)/linux-arm64/native/$(NativeLibName_linux)</NativeLibraryDestination_linux_arm64>
        </PropertyGroup>
        
        <Copy SourceFiles="$(NativeLibraryPath_osx_arm64)"
              DestinationFiles="$(NativeLibraryDestination_osx_arm64)"
              SkipUnchangedFiles="true"
              ContinueOnError="true" 
        />

        <Copy SourceFiles="$(NativeLibraryPath_osx_x64)"
              DestinationFiles="$(NativeLibraryDestination_osx_x64)"
              SkipUnchangedFiles="true"
              ContinueOnError="true"
        />
        
        <!-- Windows x64 copy -->
        <Copy SourceFiles="$(NativeLibraryPath_win_x64)"
              DestinationFiles="$(NativeLibraryDestination_win_x64)"
              SkipUnchangedFiles="true"
              ContinueOnError="true" 
        />
        
        <!-- Linux x64 copy -->
        <Copy SourceFiles="$(NativeLibraryPath_linux_x64)"
              DestinationFiles="$(NativeLibraryDestination_linux_x64)"
              SkipUnchangedFiles="true"
              ContinueOnError="true" 
        />
        
        <!-- Linux arm64 copy -->
        <Copy SourceFiles="$(NativeLibraryPath_linux_arm64)"
              DestinationFiles="$(NativeLibraryDestination_linux_arm64)"
              SkipUnchangedFiles="true"
              ContinueOnError="true"
        />
    </Target>

    <!--  https://youtrack.jetbrains.com/issue/RIDER-26906 -->
    <Target Name="ExcludeAnnoyingDylib" AfterTargets="ResolveAssemblyReferences">
        <ItemGroup>
            <None Update="@(None)">
                <Visible>false</Visible>
            </None>
        </ItemGroup>
    </Target>
    
</Project>